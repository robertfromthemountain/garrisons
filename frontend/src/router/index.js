import { createRouter, createWebHistory } from 'vue-router';
import routes from '@/router/routes'; // ImportÃ¡ljuk a kÃ¼lÃ¶n fÃ¡jlban lÃ©vÅ‘ route-okat

const router = createRouter({
  history: createWebHistory(import.meta.env.BASE_URL),
  routes
});

// **ğŸ”¹ NavigÃ¡ciÃ³s Å‘r a vÃ©dett route-okhoz**
router.beforeEach(async (to, from, next) => {
  const token = sessionStorage.getItem('accessToken');
  const role = sessionStorage.getItem('role'); // ğŸ”¹ Csak sessionStorage-bÃ³l olvassuk ki a szerepkÃ¶rt

  // **ğŸ”¹ Ha az Ãºtvonal hitelesÃ­tÃ©st igÃ©nyel, Ã©s nincs token, Ã¡tirÃ¡nyÃ­tÃ¡s a bejelentkezÃ©si oldalra**
  if (to.meta.requiresAuth && !token) {
    return next({ name: 'login' });
  }

  // **ğŸ”¹ Ha az Ãºtvonalhoz adott szerepkÃ¶r kell, ellenÅ‘rizzÃ¼k a `role` Ã©rtÃ©kÃ©t**
  if (to.meta.role) {
    if (!role || (Array.isArray(to.meta.role) && !to.meta.role.includes(role)) || (to.meta.role !== role)) {
      return next({ name: 'home' }); // ğŸ”¹ Ha a felhasznÃ¡lÃ³ nem jogosult, visszairÃ¡nyÃ­tjuk a fÅ‘oldalra
    }
  }

  next(); // ğŸ”¹ Ha minden feltÃ©tel teljesÃ¼l, engedjÃ¼k a navigÃ¡ciÃ³t
});

export default router;
